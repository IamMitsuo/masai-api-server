# -*- coding: utf_8 -*-
import os
import subprocess
import json
import logging
import shutil
from django.conf import settings
from MobSF.utils import filename_from_path

logger = logging.getLogger(__name__)


def apkid_analysis(app_dir, apk_file, apk_name):
    """APKiD Analysis of DEX files"""
    apkid_res = {}
    if not settings.APKID_ENABLED:
        return apkid_res
    if not os.path.exists(apk_file):
        logger.error("APKiD - APK not found")
        return {'error': True}
    dest_dir = os.path.join(app_dir, "apkid")
    file_name = filename_from_path(apk_file)
    report_file = file_name + "_apkid.json"
    report = os.path.join(dest_dir, report_file)
    temporary_apk = os.path.join(dest_dir, file_name)
    if os.path.exists(dest_dir):
        shutil.rmtree(dest_dir)
    os.mkdir(dest_dir)
    shutil.copy2(apk_file, dest_dir)
    from apkid import apkid
    from apkid import __version__ as apkid_ver
    logger.info("Running APKiD %s on: %s", apkid_ver,
                file_name)
    result = apkid.scan(dest_dir, 30, True, dest_dir, True)
    with open(report, 'r') as f:
        result = json.load(f)
    for filep, res in result.items():
        try:
            dex_file = filep.rsplit("!", 1)[1]
        except Exception:
            #dex_file = filename_from_path(filep)
            dex_file = apk_name
        apkid_res[dex_file] = res
    shutil.rmtree(dest_dir)
    return apkid_res
